{
  "react-class-connect.jsx": {
    "prefix": "react-class-connect.jsx",
    "body": [
      "import React, { PureComponent } from 'react';",
      "import PropTypes from 'prop-types'",
      "",
      "import { connect } from 'react-redux';",
      "",
      "import './screen.scss';",
      "",
      "/**",
      " * TODO Add description to component",
      " * TODO add appropriate proptypes to component",
      " * TODO add unit tests to component",
      " */",
      "export class $1 extends PureComponent {",
      "",
      "  static PropTypes = {",
      "    fetchData: PropTypes.func.isRequired",
      "  };",
      "",
      "  static defaultProps = {",
      "",
      "  };",
      "",
      "  componentDidMount(){",
      "    let { fetchData } = this.props;",
      "    fetchData();",
      "  }",
      "",
      "  render(){",
      "    return (",
      "      <h1>",
      "        {'Hello, 你好, bonjour'}",
      "      </h1>",
      "    );",
      "  }",
      "",
      "}",
      "",
      "function mapStateToProps(state){",
      "  return {",
      "    example:state.example",
      "  }",
      "}",
      "",
      "function mapDispatchToProps(dispatch){",
      "  return {",
      "    fetchData: ()=> {",
      "      dispatch({ type: 'SOME_FETCH_ACTION' })",
      "    }",
      "  }",
      "}",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  },
  "react-class.jsx": {
    "prefix": "react-class.jsx",
    "body": [
      "import React, { Component } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// $2 TODO - add/remove screen.scss",
      "import './screen.scss';",
      "",
      "export class $1 extends Component {",
      "",
      "  static propTypes = {",
      "",
      "  } ",
      "  ",
      "  static defaultPropTypes = {",
      "",
      "  }",
      "",
      "  render(){",
      "    return (",
      "      <h1>",
      "        {'Hello, 你好, bonjour'}",
      "      </h1>",
      "    );",
      "  }",
      "",
      "}",
      "",
      "export default $1;"
    ]
  },
  "react-error-boundary.jsx": {
    "prefix": "react-error-boundary.jsx",
    "body": [
      "import React, { Component } from 'react';",
      "",
      "class ErrorBoundary extends React.Component {",
      "",
      "  state = { ",
      "    error: null,",
      "    hasError: false,",
      "    info: info",
      "  };",
      "",
      "  componentDidCatch(error, info) {",
      "    this.setState({ ",
      "      error: error,",
      "      hasError: true, ",
      "      info: info",
      "    });",
      "  }",
      "",
      "  render() {",
      "    // TODO create a context specific error",
      "    let { error, hasError, info } = this.state;",
      "    if (hasError) {",
      "      return (",
      "        <div className=\"error-component\">",
      "          <h2>{'An error occured'}</h2>",
      "          <pre>",
      "            <code>",
      "              {error}",
      "            </code>",
      "          </pre>",
      "        </div>  ",
      "        );",
      "      }",
      "    return this.props.children;",
      "  }",
      "}"
    ]
  },
  "react-index.js": {
    "prefix": "react-index.js",
    "body": [
      "import $1 from './$1';",
      "",
      "export {",
      "  $1",
      "};",
      "",
      "export default {",
      "  $1: $1",
      "};"
    ]
  },
  "react-init.jsx": {
    "prefix": "react-init.jsx",
    "body": [
      "import 'babel-polyfill';",
      "import React from 'react';",
      "import ReactDOM from 'react-dom';",
      "import { BrowserRouter } from 'react-router-dom';",
      "",
      "// TODO - update main application original position ",
      "import Application from './containers/Application';",
      "",
      "// REDUX Store initialization",
      "import { applyMiddleware, compose, createStore, combineReducers } from 'redux';",
      "",
      "function exampleReducer(state={}, action){",
      "  if ('@@INIT' === action.type){",
      "    return {initialized: true};",
      "  }",
      "  return state;",
      "}",
      "",
      "const store = createStore(",
      "  combineReducers({example: exampleReducer}),",
      "  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()",
      ");",
      "",
      "// Finaly, render application",
      "ReactDOM.render((",
      "  <Application",
      "    history={BrowserRouter}",
      "    store={store}",
      "  />),",
      "  document.getElementById('root')",
      ");"
    ]
  },
  "react-pure-class.jsx": {
    "prefix": "react-pure-class.jsx",
    "body": [
      "import React, { PureComponent } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "export class $1 extends PureComponent {",
      "",
      "  static propTypes = {",
      "",
      "  } ",
      "  ",
      "  static defaultPropTypes = {",
      "",
      "  }",
      "",
      "  render(){",
      "    return (",
      "      <h1>",
      "        {'Hello, 你好, bonjour'}",
      "      </h1>",
      "    );",
      "  }",
      "",
      "}",
      "",
      "export default $1;"
    ]
  }
}